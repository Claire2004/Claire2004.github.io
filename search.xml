<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>先天免疫2-PAMPs/PRRs</title>
      <link href="/2022/02/10/immunology-2/"/>
      <url>/2022/02/10/immunology-2/</url>
      
        <content type="html"><![CDATA[<p>病原相關分子模式(Pathogen-associated molecular patterns, PAMP)是和病原相關的小分子序列(可以當作抗原)，能被模式識別受體（pattern recognition receptors, PRR）識別。<br>識別受體包含：TLR、NLR、RLR等，本篇文會著重介紹TLR。</p><h1 id="類鐸受體-TLR"><a href="#類鐸受體-TLR" class="headerlink" title="類鐸受體(TLR)"></a>類鐸受體(TLR)</h1><p>類鐸受體(Toll-like receptor,TLR)，是人類重要的PRRs，和果蠅的TLR有同源性。</p><h2 id="活化途徑"><a href="#活化途徑" class="headerlink" title="活化途徑"></a>活化途徑</h2><p>TLR接觸到PAMPs後，由RTK(受體酪胺酸激酶)傳訊至核，啟動特定基因轉錄，表現發炎相關物質(如IL介白素、IFR-γ干擾素)或第一型干擾素(IFN-α&#x2F;β)。</p><h2 id="種類"><a href="#種類" class="headerlink" title="種類"></a>種類</h2><table><thead><tr><th></th><th>PAMPs(病原分子)</th><th>PRRs(病原辨識受體)</th></tr></thead><tbody><tr><td>胞外</td><td>肽聚醣、LPS(內毒素，G(-)專有)、鞭毛等</td><td>TLR1&#x2F;2&#x2F;6&#x2F;4&#x2F;5&#x2F;11</td></tr><tr><td>胞內</td><td>病毒核酸(單雙股之DNA&#x2F;RNA)</td><td>TLR3&#x2F;7&#x2F;8&#x2F;9</td></tr></tbody></table><p><img src="https://i.imgur.com/6cJVho9.jpg"></p><h2 id="重要的TLR4"><a href="#重要的TLR4" class="headerlink" title="重要的TLR4"></a>重要的TLR4</h2><p>TRL4是非常的別的TLR，受LPS或其他內源分子活化後，形成二聚體(dimer)，會同時活化兩種途徑(NF-κB、IRF)。<br>NF-κB活化會釋放引起發炎的細胞激素，而IRF活化會分泌第一型干擾素(IFN-α&#x2F;β)。<br><img src="https://i.imgur.com/Pfr910O.jpg"></p><h2 id="CpG模體和TLR9"><a href="#CpG模體和TLR9" class="headerlink" title="CpG模體和TLR9"></a>CpG模體和TLR9</h2><p>上圖可見：CpG DNA會活化endosome裡的TLR9。<br>CpG模體，指DNA的胞嘧啶、鳥糞嘌呤及正磷酸二酯體結合的DNA序列。因其在多數哺乳類中無甲基化，而在病毒或細菌中無甲基化，因此可以簡略區分外來病原。</p><div class="note warning flat"><p>Q:為甚麼不分仔細點？<br>A:病原同時在擴大感染，越快越好。<br>(<strong>這邊就能看出免疫必然有取捨，要快就不精。</strong>)</p></div><p>活化：CpG DNA可和TLR9以2:2形成二聚物，C端互相靠近，TLR二聚結構更穩定，傳遞訊息。<br>抑制：agonistic CpG-DNA以1:1形成馬蹄形結構，當agonistic CpG-DNA和TLR9結合後，TLR9和外來病原的CpG DNA無法結合，機能受阻。<br><img src="https://i.imgur.com/mmzTG9y.jpg"></p><h1 id="NLR-NOD-like-receptor"><a href="#NLR-NOD-like-receptor" class="headerlink" title="NLR(NOD-like receptor)"></a>NLR(NOD-like receptor)</h1><h1 id="RLR-RIG-I-like-receptor"><a href="#RLR-RIG-I-like-receptor" class="headerlink" title="RLR(RIG-I-like receptor)"></a>RLR(RIG-I-like receptor)</h1><h1 id="cGAS-x2F-STING"><a href="#cGAS-x2F-STING" class="headerlink" title="cGAS&#x2F;STING"></a>cGAS&#x2F;STING</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>關於後三個識別受體，筆者目前對它們認識不多，希望於畢業後再好好研究(尤其是cGAS&#x2F;STING，目前唯一可以拿來做疫苗或藥物的sensor)，再將內容補上！</p><div class="note modern"><p>2022&#x2F;02&#x2F;10 我也滿好奇TLR和TOLL recepter究竟是外型相近還是傳遞路徑也很像，但目前還沒找到解答。</p></div><p>Claire2004(2022&#x2F;02&#x2F;10)</p>]]></content>
      
      
      <categories>
          
          <category> Immunology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Immunology </tag>
            
            <tag> Biology </tag>
            
            <tag> Education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>先天免疫1-防線</title>
      <link href="/2022/02/10/immunology-1/"/>
      <url>/2022/02/10/immunology-1/</url>
      
        <content type="html"><![CDATA[<p>先天性免疫，又稱非特異性免疫，是免疫系統非專一性的防禦，雖然不具記憶性(後天性免疫有記憶細胞)，但能在面對抗原時，有更快速的反應。</p><h1 id="第一道防線-天然屏障"><a href="#第一道防線-天然屏障" class="headerlink" title="第一道防線(天然屏障)"></a>第一道防線(天然屏障)</h1><ol><li>物理性：皮膚角質層、黏膜</li><li>化學性：溶菌酶(可破壞細胞壁，口水、眼淚中都有)、抗體IgA(存在黏膜組織中，初乳含量多)脂肪酸、乳酸、抗微生物肽(AMPs)</li><li>生物性：共生菌叢(競爭領地等)</li></ol><h2 id="防禦素"><a href="#防禦素" class="headerlink" title="防禦素"></a>防禦素</h2><p>防禦素(defensin)屬AMP，由於蛋白質電性相吸，拉扯細胞膜造成細菌的細胞膜穿孔。<br><img src="https://i.imgur.com/wZ2Doc3.jpg"></p><h2 id="黏膜"><a href="#黏膜" class="headerlink" title="黏膜"></a>黏膜</h2><p>黏膜和皮膚最大的差別是，皮膚較像是在外面不動的防護罩(角質層)，而黏膜傾向動態變化、具有通透性。<br>黏膜的細胞表面有充滿醣蛋白的黏液，除了可以黏住病原(減緩移動速度等)，也能黏住IgA dimer，讓抗體發揮中和功能。</p><h2 id="抗體IgA"><a href="#抗體IgA" class="headerlink" title="抗體IgA"></a>抗體IgA</h2><p>抗體IgA除了存在在各個黏膜組織中，初乳也富含大量IgA，是協助嬰兒抵抗的外來物的一大助力。嬰兒喝下母乳後，整條消化管的黏膜都可以將IgA黏住，將病原體擋在第一層防線。(母乳也會經過咽，順便保護呼吸道)<br><img src="https://i.imgur.com/RZmNawX.png"></p><p>腸道是身體免疫系統的一大城牆，每天都必須面對各種外來物的入侵，又有大量共生菌叢在虎視眈眈，但同時必須盡可能從食物吸收多一些養分，不能發炎太旺盛。<br>身體該如何面對如此進退兩難的情況，是非常有趣的拉鋸戰，日後再來分享腸道黏膜的精妙之處。</p><h1 id="第二道防線"><a href="#第二道防線" class="headerlink" title="第二道防線"></a>第二道防線</h1><p>當外來抗原已經衝破免疫第一道防線，進入體內後，免疫系統相關的細胞就必須出馬消滅外來物質，包含發炎、補體系統等。</p><p>第二道防線的準則是：</p><center><b>快速區分，搶奪先機</b></center><p>辨認病原共通特徵！如此就能快速反應，即便不能完全扼殺，也可以阻止快速蔓延。</p><h2 id="敵我辨識"><a href="#敵我辨識" class="headerlink" title="敵我辨識"></a>敵我辨識</h2><p>敵我辨識乃免疫中最重要的一環，若不能正確區分自我&#x2F;非我的物質，那就會在錯誤的時機啟動免疫，不然會殃及自身細胞，常見的自體免疫疾病，如：重症肌無力(Myasthenia gravis)、多發性硬化症(Multiple Sclerosis)等皆由此起。</p><p>第二道防線的敵我辨識由PAMP&#x2F;PRR負責，將在先天免疫2進行介紹！</p><p>Claire2004(2022&#x2F;02&#x2F;10)</p>]]></content>
      
      
      <categories>
          
          <category> Immunology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Immunology </tag>
            
            <tag> Biology </tag>
            
            <tag> Education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.初學者如何利用Github建立hexo個人網頁</title>
      <link href="/2022/02/07/how-to-build-websites-1/"/>
      <url>/2022/02/07/how-to-build-websites-1/</url>
      
        <content type="html"><![CDATA[<p>本文將簡單介紹Github平台與hexo的特點，之後完整介紹如何利用Github建立屬於自己的靜態網站，此篇包含必要程式的下載、在Github網站創建網頁的過程。</p><div class="note success flat"><p>筆者的電腦作業系統為Windows10，教學內容皆以此系統為主。</p></div><p>本文以個人經驗為主，完整列出架設hexo個人網頁的流程，旨在幫助所有同為資訊小白、毫無基礎的初學者，能有詳細的步驟可以遵循。</p><div class="note info no-icon flat"><p>特別致謝：<a href="https://albert-notes.github.io/">Albert Huang</a>提供的技術指導。是架設網站界的翹楚，是架設網站與教學系之祭酒，同時也是筆者的好朋朋！</p></div><h1 id="什麼是Github"><a href="#什麼是Github" class="headerlink" title="什麼是Github?"></a>什麼是Github?</h1><p>Gtihub是一個可以控制程式版本與協作的一個全球性平台，同時具有發布靜態網站(static website)的功能，時常被使用來儲存工程師編寫的程式碼與進行相關軟體開發時的開源(open source)作業。由於時常被工程師拿來進行作業開發，因此亦有「全球最大男性交友平台」的稱號。</p><h1 id="什麼是Hexo"><a href="#什麼是Hexo" class="headerlink" title="什麼是Hexo?"></a>什麼是Hexo?</h1><p>Hexo是由Node.js所支援的一項網頁實作框架，可以用來快速地建造個人的部落格。一般而言與Github搭配來搭建靜態網站，但也可以利用其他的伺服器來進行作業。<br>Hexo使用Markdown語法來實現與儲存文章內容，相對於使用一般HTML檔案進行編寫有不小的便利性，對於網站初學者可以建立概念與快速入門。</p><h1 id="動態網站與靜態網站的差別"><a href="#動態網站與靜態網站的差別" class="headerlink" title="動態網站與靜態網站的差別?"></a>動態網站與靜態網站的差別?</h1><p>動態網站，顧名思義他與使用者的操作是屬於動態的互動模式，主要是搭配伺服器與資料庫共同運作，一般而言主要會使用在會員登入、討論區等地方，常用的語言有PHP、ASP、SQL等。</p><p>相對的，靜態網站以超文件標示語言(HyperText Markup Language)來編寫的網站，主要是供更新不頻繁與展示性質的網站使用，常與CSS與Javascript搭配完成架設。</p><h1 id="下載必要程式"><a href="#下載必要程式" class="headerlink" title="下載必要程式"></a>下載必要程式</h1><h2 id="1-Git-Git下載連結"><a href="#1-Git-Git下載連結" class="headerlink" title="1. Git (Git下載連結)"></a>1. Git (<a href="https://git-scm.com/downloads">Git下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟<a href="https://git-scm.com/downloads">Git下載頁面</a>，選擇Windows。<br><img src="https://i.imgur.com/dBwbfrA.png"></li><li>點選最新版本下載。<br><img src="https://i.imgur.com/9DyZob2.png"></li><li>下載完後開啟檔案，完成安裝。(按Next直到結束)<br><img src="https://i.imgur.com/Yo6sazI.png"></li></ol></div></div><h2 id="2-Node-js-Node-js下載連結"><a href="#2-Node-js-Node-js下載連結" class="headerlink" title="2. Node.js(Node.js下載連結)"></a>2. Node.js(<a href="https://nodejs.org/en/">Node.js下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟<a href="https://nodejs.org/en/">Node.js下載頁面</a>，下載LTS版本。<br> <img src="https://i.imgur.com/RbwXA5s.png"></li><li>下載完後開啟檔案，完成安裝。(一樣持續按Next即可)</li></ol></div></div><h2 id="3-Visual-Studio-Code-VS-Code下載連結"><a href="#3-Visual-Studio-Code-VS-Code下載連結" class="headerlink" title="3. Visual Studio Code(VS Code下載連結)"></a>3. Visual Studio Code(<a href="https://code.visualstudio.com/Download">VS Code下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟(<a href="https://code.visualstudio.com/Download">VS Code下載頁面</a>)，下載Windows版本。<br><img src="https://i.imgur.com/tnvrMNE.png"></li><li>下載後開啟檔案，完成安裝。(按Next)</li></ol></div></div><h1 id="在Github建立repo"><a href="#在Github建立repo" class="headerlink" title="在Github建立repo"></a>在Github建立repo</h1><ol><li>到<a href="https://github.com/">Github網頁</a>註冊自己的帳號。<br>(username攸關未來創建的所有個人網頁網址，記得三思後落筆。)</li><li>點開Your Repositories(以下簡稱repo)，Create a new repo。</li><li>在Repository name輸入username(後面加.github.io)<br><img src="https://i.imgur.com/KsEZMGL.png"><blockquote><p>3.目的是讓個人網頁的網址更簡短，若是設定其他字，未來的網址就會變成: username.github.io&#x2F;repository </p></blockquote></li><li>選擇Public，其他不用理沒關係。(之後會套用現成模板)</li><li>創好repo後，點進去並進入settings。<br><img src="https://i.imgur.com/tsW7Gfh.png"></li><li>左方欄位選擇Pages<br>將Branch改成master並儲存，再選擇任一theme。<br><img src="https://i.imgur.com/K0W2AEJ.png"></li><li>架設網站成功！</li></ol><p>目前進入個人網頁會呈現以下樣貌，屬正常現象XD 但你已經擁有屬於自己的網站了！<br><img src="https://i.imgur.com/XKGWA55.png"></p><p>下一篇教學文會分享如何將網站個人化，以及如何自己的電腦修改程式碼後更新到網頁上。</p><p>最後，祝大家新年愉快、幸虎快樂！❤<br>Claire2004(2022&#x2F;02&#x2F;07)</p><p>Cover pic from <a href="https://inclusion-international.org/">https://inclusion-international.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> Website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Education </tag>
            
            <tag> Website </tag>
            
            <tag> Computer </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
