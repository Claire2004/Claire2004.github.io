<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>免疫首章-敵我辨識與先天性免疫</title>
      <link href="/2022/02/09/immunology-1/"/>
      <url>/2022/02/09/immunology-1/</url>
      
        <content type="html"><![CDATA[<p>本文將介紹：<br>(一)人體免疫系統如何區別敵我分子，並啟動不同的應對方式。<br>(二)人體先天性免疫(非特異)的機制。</p><h1 id="敵我辨識"><a href="#敵我辨識" class="headerlink" title="敵我辨識"></a>敵我辨識</h1><p>敵我辨識乃免疫中最重要的一環，若不能正確區分自我&#x2F;非我的物質，那就會在錯誤的時機啟動免疫，常見的自體免疫疾病，如：重症肌無力(Myasthenia gravis)、多發性硬化症(Multiple Sclerosis)等皆由此起。</p><h2 id="快速區分"><a href="#快速區分" class="headerlink" title="快速區分"></a>快速區分</h2><p>辨認病原共通特徵！</p><div class="note info flat"><p>類鐸受體(Toll-like receptor,TLR)，人類和果蠅的TLR有同源性。</p></div><table><thead><tr><th></th><th>PAMPs(病原分子)</th><th>PRRs(病原辨識受體)</th></tr></thead><tbody><tr><td>胞外</td><td>肽聚醣、LPS(內毒素，G(-)專有)、鞭毛等</td><td>TLR1&#x2F;2&#x2F;6&#x2F;4&#x2F;5</td></tr><tr><td>胞內</td><td>病毒核酸(單雙股之DNA&#x2F;RNA)</td><td>TLR3&#x2F;7&#x2F;8&#x2F;9</td></tr></tbody></table><p><img src="https://i.imgur.com/6cJVho9.jpg"></p><p>TLR接觸到PAMPS後，由RTK(受體酪胺酸激酶)或GPCR(G蛋白偶聯受體，血管中)傳訊至核，啟動特定基因轉錄，表現發炎相關物質(如IL介白素、IFR-γ干擾素)或第一型干擾素(IFN-α&#x2F;β)。</p><h2 id="精密區分"><a href="#精密區分" class="headerlink" title="精密區分"></a>精密區分</h2><p>盡量越仔細越好！</p><p>白血球上的主要組織相容性複合體(Major histocompatibility complex, MHC)辨認，因其複基因遺傳(眾多複等位基因決定)和等位基因共顯性的特質，是人體內最多樣化的蛋白質(MHC在人體內名為HLA)。</p><table><thead><tr><th></th><th>MHC class I</th><th>MHC class II</th></tr></thead><tbody><tr><td>表現細胞</td><td>有核細胞</td><td>APC</td></tr><tr><td>呈現抗原</td><td>內源性</td><td>外源性(吞噬)</td></tr><tr><td>呈現對象</td><td>Tc</td><td>Th</td></tr></tbody></table><div class="note info flat"><p>抗原呈現細胞(APC)都是有核細胞，也會呈現MHC I。</p></div><div class="note info flat"><p>NK有活化型受體(殺)和抑制型受體(放)，依訊息總和決定是否胞毒。<br>活化受體：KIR、KAR<br>抑制受體：MHC clssI(若是病毒讓細胞MHC I不表現，反而會被NK殺掉)</p></div><h1 id="先天性免疫"><a href="#先天性免疫" class="headerlink" title="先天性免疫"></a>先天性免疫</h1><p>先天性免疫，又稱非特異性免疫，是免疫系統非專一性的防禦，雖然不具記憶性(後天性免疫有記憶細胞)，但能在面對抗原時，有更快速的反應。</p><h2 id="天然屏障-第一道"><a href="#天然屏障-第一道" class="headerlink" title="天然屏障(第一道)"></a>天然屏障(第一道)</h2><ol><li>物理性：皮膚角質層、黏液</li><li>化學性：溶菌酶(可破壞細胞壁，口水、眼淚中都有)、脂肪酸、乳酸、抗微生物肽(AMPs)</li><li>生物性：共生菌叢(競爭領地等)</li></ol><div class="note info simple"><p>防禦素(defensin)屬AMP，由於蛋白質電性相吸，拉扯細胞膜造成細菌的細胞膜穿孔。</p></div><p><img src="https://i.imgur.com/wZ2Doc3.jpg"></p><h2 id="急性發炎反應-第二道"><a href="#急性發炎反應-第二道" class="headerlink" title="急性發炎反應(第二道)"></a>急性發炎反應(第二道)</h2><ol><li>局部反應，血管改變(TLR)<br>內皮細胞、肥大細胞、駐留的巨噬細胞、補體先回應，釋出各種細胞激素(cytokine)，造成紅熱腫痛、召集吞噬細胞、APC。</li></ol><table><thead><tr><th>感覺</th><th>激素</th><th>原因</th></tr></thead><tbody><tr><td>紅</td><td>前列腺素、LT白三烯</td><td>血管平滑肌放鬆、微血管擴張</td></tr><tr><td>腫</td><td>TNF-α</td><td>微血管通透性增加</td></tr><tr><td>熱</td><td></td><td>微血管充血</td></tr><tr><td>痛</td><td>前列腺素</td><td>痛覺受器閾值降低(且組織腫脹)</td></tr></tbody></table><ol start="2"><li><p>吞噬細胞、APC受細胞激素召集，血小板、成纖維細胞抵達<br>2-1. 血小板凝血堵住缺口、修復傷口，和成纖維細胞圍困病原體(sticky)。<br>2-2. 吞噬細胞受地址素趨化，到附近時慢慢滾，抵達(GPCR)後從微血管穿出。<br><img src="https://i.imgur.com/lEKXblP.jpg"></p></li><li><p>吞噬病原、胞毒作用(後天免疫)<br>3-1. 中性球吞噬或氧化，自身也陣亡<br>3-2. 樹突細胞吞噬，但抗原呈現更重要<br>3-3. 巨噬細胞吞噬、清理現場、釋放細胞激素<br>3-4. 自然殺手(NK)平常四處巡，發炎時會幫忙</p></li></ol><h2 id="全身性反應"><a href="#全身性反應" class="headerlink" title="全身性反應"></a>全身性反應</h2><p>細胞激素(IL-1、IL-6、TNF-α)釋放至血液中，將下視丘的體溫設定調高，出現「發燒不汗」的現象。</p><h2 id="補體系統"><a href="#補體系統" class="headerlink" title="補體系統"></a>補體系統</h2><p>補體蛋白由肝臟製造，水解後才有功能。(如C3水解成C3a, C3b)<br>活化途徑：</p><ol><li>經典途徑，由C1開始和抗體(專一性)結合活化其他補體蛋白(142356789)，形成膜攻擊複合體(MAC)。</li><li>替代途徑，由C3自動水解開始，…C5…，形成膜攻擊複合體(MAC)。</li><li>凝集素途徑，甘露糖結合凝集素和病原體表面結合。</li></ol><p><img src="https://i.imgur.com/S6y00kY.png"></p><p>功能：</p><ol><li>調理：方便吞噬細胞吞噬。</li><li>打洞：MAC使PM有洞，滲透壓無法維持而脹破。</li></ol><div class="note warning flat"><p>從替代路徑的活化方式來看，沒有「辨別敵我」的過程。<br>Q：人體細胞為何不會被補體盯上？<br>A：有調節蛋白。</p></div><h2 id="病毒感染"><a href="#病毒感染" class="headerlink" title="病毒感染"></a>病毒感染</h2><ol><li>NK(先)、Tc(後)會毒殺被感染細胞。</li><li>被感染的有核細胞分泌第一型干擾素(IFN-α&#x2F;β)。<br>2-1. 細胞被病毒感染後轉錄、轉譯干擾素基因，分泌出干擾素。<br>2-2. 鄰近未感染細胞受干擾素刺激，開始轉錄、轉譯抗病毒蛋白。<br>2-3. 抗病毒蛋白阻止病毒增殖。</li></ol><h2 id="戰後回復"><a href="#戰後回復" class="headerlink" title="戰後回復"></a>戰後回復</h2><p>免疫系統對抗病原，就好比打了一場大戰，大戰過後，病原刺激減少，細胞激素也減少，發炎反應就會逐漸冷卻下來。巨噬細胞清理現場，並促使傷口附近組織修復。</p><p>Claire2004(2022&#x2F;02&#x2F;09)</p>]]></content>
      
      
      <categories>
          
          <category> Immunology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Education </tag>
            
            <tag> Immunology </tag>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.初學者如何利用Github建立hexo個人網頁</title>
      <link href="/2022/02/07/how-to-build-websites-1/"/>
      <url>/2022/02/07/how-to-build-websites-1/</url>
      
        <content type="html"><![CDATA[<p>本文將簡單介紹Github平台與hexo的特點，之後完整介紹如何利用Github建立屬於自己的靜態網站，此篇包含必要程式的下載、在Github網站創建網頁的過程。</p><div class="note success flat"><p>筆者的電腦作業系統為Windows10，教學內容皆以此系統為主。</p></div><p>本文以個人經驗為主，完整列出架設hexo個人網頁的流程，旨在幫助所有同為資訊小白、毫無基礎的初學者，能有詳細的步驟可以遵循。</p><div class="note info no-icon flat"><p>特別致謝：<a href="https://albert-notes.github.io/">Albert Huang</a>提供的技術指導。是架設網站界的翹楚，是架設網站與教學系之祭酒，同時也是筆者的好朋朋！</p></div><h1 id="什麼是Github"><a href="#什麼是Github" class="headerlink" title="什麼是Github?"></a>什麼是Github?</h1><p>Gtihub是一個可以控制程式版本與協作的一個全球性平台，同時具有發布靜態網站(static website)的功能，時常被使用來儲存工程師編寫的程式碼與進行相關軟體開發時的開源(open source)作業。由於時常被工程師拿來進行作業開發，因此亦有「全球最大男性交友平台」的稱號。</p><h1 id="什麼是Hexo"><a href="#什麼是Hexo" class="headerlink" title="什麼是Hexo?"></a>什麼是Hexo?</h1><p>Hexo是由Node.js所支援的一項網頁實作框架，可以用來快速地建造個人的部落格。一般而言與Github搭配來搭建靜態網站，但也可以利用其他的伺服器來進行作業。<br>Hexo使用Markdown語法來實現與儲存文章內容，相對於使用一般HTML檔案進行編寫有不小的便利性，對於網站初學者可以建立概念與快速入門。</p><h1 id="動態網站與靜態網站的差別"><a href="#動態網站與靜態網站的差別" class="headerlink" title="動態網站與靜態網站的差別?"></a>動態網站與靜態網站的差別?</h1><p>動態網站，顧名思義他與使用者的操作是屬於動態的互動模式，主要是搭配伺服器與資料庫共同運作，一般而言主要會使用在會員登入、討論區等地方，常用的語言有PHP、ASP、SQL等。</p><p>相對的，靜態網站以超文件標示語言(HyperText Markup Language)來編寫的網站，主要是供更新不頻繁與展示性質的網站使用，常與CSS與Javascript搭配完成架設。</p><h1 id="下載必要程式"><a href="#下載必要程式" class="headerlink" title="下載必要程式"></a>下載必要程式</h1><h2 id="1-Git-Git下載連結"><a href="#1-Git-Git下載連結" class="headerlink" title="1. Git (Git下載連結)"></a>1. Git (<a href="https://git-scm.com/downloads">Git下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟<a href="https://git-scm.com/downloads">Git下載頁面</a>，選擇Windows。<br><img src="https://i.imgur.com/dBwbfrA.png"></li><li>點選最新版本下載。<br><img src="https://i.imgur.com/9DyZob2.png"></li><li>下載完後開啟檔案，完成安裝。(按Next直到結束)<br><img src="https://i.imgur.com/Yo6sazI.png"></li></ol></div></div><h2 id="2-Node-js-Node-js下載連結"><a href="#2-Node-js-Node-js下載連結" class="headerlink" title="2. Node.js(Node.js下載連結)"></a>2. Node.js(<a href="https://nodejs.org/en/">Node.js下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟<a href="https://nodejs.org/en/">Node.js下載頁面</a>，下載LTS版本。<br> <img src="https://i.imgur.com/RbwXA5s.png"></li><li>下載完後開啟檔案，完成安裝。(一樣持續按Next即可)</li></ol></div></div><h2 id="3-Visual-Studio-Code-VS-Code下載連結"><a href="#3-Visual-Studio-Code-VS-Code下載連結" class="headerlink" title="3. Visual Studio Code(VS Code下載連結)"></a>3. Visual Studio Code(<a href="https://code.visualstudio.com/Download">VS Code下載連結</a>)</h2><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span></span></div>    <div class="hide-content"><ol><li>開啟(<a href="https://code.visualstudio.com/Download">VS Code下載頁面</a>)，下載Windows版本。<br><img src="https://i.imgur.com/tnvrMNE.png"></li><li>下載後開啟檔案，完成安裝。(按Next)</li></ol></div></div><h1 id="在Github建立repo"><a href="#在Github建立repo" class="headerlink" title="在Github建立repo"></a>在Github建立repo</h1><ol><li>到<a href="https://github.com/">Github網頁</a>註冊自己的帳號。<br>(username攸關未來創建的所有個人網頁網址，記得三思後落筆。)</li><li>點開Your Repositories(以下簡稱repo)，Create a new repo。</li><li>在Repository name輸入username(後面加.github.io)<br><img src="https://i.imgur.com/KsEZMGL.png"><blockquote><p>3.目的是讓個人網頁的網址更簡短，若是設定其他字，未來的網址就會變成: username.github.io&#x2F;repository </p></blockquote></li><li>選擇Public，其他不用理沒關係。(之後會套用現成模板)</li><li>創好repo後，點進去並進入settings。<br><img src="https://i.imgur.com/tsW7Gfh.png"></li><li>左方欄位選擇Pages<br>將Branch改成master並儲存，再選擇任一theme。<br><img src="https://i.imgur.com/K0W2AEJ.png"></li><li>架設網站成功！</li></ol><p>目前進入個人網頁會呈現以下樣貌，屬正常現象XD 但你已經擁有屬於自己的網站了！<br><img src="https://i.imgur.com/XKGWA55.png"></p><p>下一篇教學文會分享如何將網站個人化，以及如何自己的電腦修改程式碼後更新到網頁上。</p><p>最後，祝大家新年愉快、幸虎快樂！❤<br>Claire2004(2022&#x2F;02&#x2F;07)</p><p>Cover pic from <a href="https://inclusion-international.org/">https://inclusion-international.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> Website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Website </tag>
            
            <tag> Computer </tag>
            
            <tag> Education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/04/hello-world/"/>
      <url>/2022/02/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
